# data that is perssisted
profile-matcher.data=target/profile-matcher-data

spring.datasource.currentSchema=profile-matcher
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres?currentSchema=profile-matcher
spring.datasource.username=profile-matcher
spring.datasource..password=profilematcherpass
spring.datasource.platform=postgresql
spring.datasource.driverClassName=org.postgresql.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.javax.persistence.schema-generation.database.action=update
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.drop-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=${profile-matcher.data}/profile-matcher-schema-${spring.datasource.platform}-create.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=${profile-matcher.data}/profile-matcher-schema-${spring.datasource.platform}-drop.sql
spring.jpa.properties.hibernate.order_by.default_null_ordering=last
